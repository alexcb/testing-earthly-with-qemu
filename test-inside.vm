#!/bin/bash
set -e
echo "I am running on $(hostname)"

test "$UID" = "0" || (echo "this script should be run as root" && exit 1)

if ls /sys/fs/cgroup/cgroup.controllers; then
    echo "Running with cgroup v2"
else
    echo "Running with cgroup v1"
    exit 1
fi

# for apt to be noninteractive
export DEBIAN_FRONTEND noninteractive
export DEBCONF_NONINTERACTIVE_SEEN true

apt-get update
apt-get install -y \
    ca-certificates \
    curl \
    gnupg \
    lsb-release

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

apt-get update
apt-get install -y docker-ce docker-ce-cli containerd.io

docker run hello-world

usermod -aG docker ubuntu

wget https://github.com/earthly/earthly/releases/latest/download/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly && /usr/local/bin/earthly bootstrap --with-autocomplete

earthly github.com/earthly/hello-world+hello

git clone https://github.com/earthly/earthly.git
cd earthly

earthly +for-linux

mkdir ~/podman-in-earthly

cat > ~/podman-in-earthly/Earthfile <<EOF
test:
    FROM alpine:3.14
    RUN apk add --no-cache --update podman
    WITH DOCKER
        RUN sed -i 's/\/var\/lib\/containers\/storage/\$EARTHLY_DOCKERD_DATA_ROOT/g' /etc/containers/storage.conf && \
            podman run --name foo --rm docker.io/library/alpine:3.13 cat /etc/alpine-release
    END
EOF


./build/linux/amd64/earthly -P ~/podman-in-earthly+test
